name: Tests sur PR de la branche dev

on:
  push:
    branches:
      - workflowsDev

jobs:
  test:
    name: 'Testing Flutter App'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - name: Setup Flutter SDK
        uses: flutter-actions/setup-flutter@v2
        with:
          channel: stable
          version: 3.0.2

      - name: Install dependencies
        run: flutter pub get
      - name: Analyze project source
        run: dart analyze
      - name: Run tests
        run: flutter test

  deploy-main:
    name: 'Deploy to main'
    runs-on: ubuntu-latest
    needs: [test]
    if: |
      always() && 
      (needs.test.result == 'success')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: workflowsDev
      - name: Deploy to workflowsDev
        run: |
          echo "# Config"
          git config --local user.email "[hidden]"
          git config --local user.name "CI"
          echo "# Fetch all"
          git fetch --all
          echo "# Checkout/pull development"
          git checkout workflowsDev
          git pull
          echo "# Checkout/pull master"
          git checkout workflows
          git pull
          echo "# Merge"
          git merge workflowsDev -X theirs --allow-unrelated-histories
          echo "# Push"
          git push origin
    
  deploy-rejected:
    name: 'Deploy to rejected build ${{ github.run_number }}'
    runs-on: ubuntu-latest
    needs: [test]
    if: |
      always() && 
      (needs.test.result == 'failure')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: workflowsDev
      - name: Deploy
        run: |
          echo "# Config"
          git config --local user.email "[hidden]"
          git config --local user.name "CI"
          git config --global pull.rebase true
          echo "# Fetch all"
          git fetch --all
          echo "# Checkout/pull development"
          git checkout workflowsDev
          git pull
          git checkout -b rejected/${{ github.run_number }}
          echo "# Merge"
          git merge workflowsDev -X theirs --allow-unrelated-histories
          git push origin rejectedTESTCI/${{ github.run_number }}
          echo "# Push"
          git checkout workflowsDev
          git reset --hard HEAD~1
          git push -f origin workflowsDev