name: Tests sur PR de la branche dev

on:
  push:
    branches:
      - dev

jobs:
  test:
    name: 'Testing Flutter App'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: stable # Utiliser la dernière version stable de Flutter
          # Si vous avez besoin de spécifier une version précise de Flutter, vous pouvez le faire en utilisant le paramètre "flutter-version"

      - name: Install dependencies
        run: flutter packages get # Exécuter la commande `flutter packages get` pour installer les dépendances

      - name: Run tests
        run: flutter test
  
  build-ios:
    name: 'Build on IOS'
    runs-on: macos-latest
    needs: [test]
    if: |
      always() && 
      (needs.test.result == 'success')

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: stable

      - name: Clean dependencies
        run: flutter clean

      - name: Get dependencies
        run: flutter pub get

      - name: Build IPA
        run: flutter build ios --no-codesign

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v2
        with:
          name: Runner.ipa
          path: build/ios/iphoneos/Runner.ipa
        if: runner.os == 'macOS'

  build-android:
    name: 'Build on IOS'
    runs-on: ubuntu-latest
    needs: [test]
    if: |
      always() && 
      (needs.test.result == 'success')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: stable

      - name: Get dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2

        with:
          name: app-release.apk
          path: build/app/outputs/flutter-apk/app-release.apk
        if: runner.os == 'Linux'
        
  deploy-main:
    name: 'Deploy to main'
    runs-on: ubuntu-latest
    needs: [build-ios, build-android, test]
    if: |
      always() && 
      (needs.test.result == 'success' &&
       needs.build-android.result == 'success' && needs.build-ios.result == 'success')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: dev
      - name: Deploy to main
        run: |
          echo "# Config"
          git config --local user.email "[hidden]"
          git config --local user.name "CI"
          echo "# Fetch all"
          git fetch --all
          echo "# Checkout/pull development"
          git checkout dev
          git pull
          echo "# Checkout/pull main"
          git checkout main
          git pull
          echo "# Merge"
          git merge dev -X theirs --allow-unrelated-histories
          echo "# Push"
          git push origin
          
  deploy-rejected:
    name: 'Deploy to rejected build ${{ github.run_number }}'
    runs-on: ubuntu-latest
    needs: [build-ios, build-android, test]
    if: |
      always() && 
      (needs.test.result == 'failure' ||
       needs.build-android.result == 'failure' || needs.build-ios.result == 'failure')
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: dev
      - name: Deploy to rejected/no_build
        run: |
          echo "# Config"
          git config --local user.email "[hidden]"
          git config --local user.name "CI"
          git config --global pull.rebase true
          echo "# Fetch all"
          git fetch --all
          echo "# Checkout/pull development"
          git checkout dev
          git pull
          git checkout -b rejected/${{ github.run_number }}
          echo "# Merge"
          git merge dev -X theirs --allow-unrelated-histories
          git push origin rejected/${{ github.run_number }}
          echo "# Push"
          git checkout dev
          git reset --hard HEAD~1
          git push -f origin dev