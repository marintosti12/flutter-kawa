name: Tests and Deploy
'on':
  push:
    branches:
      - dev

jobs:
  test:
    name: 'Testing'
    runs-on: windows-latest
    strategy:
      matrix:
        node:
          - 16
    steps:
      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: dev

      - name: Run All Flutter Tests
      - run: |
           flutter config --enable-windows-desktop
           flutter test -d windows
        env:
         CI: true
          
          
  deploy-main:
    name: 'Deploy to main'
    runs-on: ubuntu-latest
    needs: [test]
    if: |
      always() && 
      (needs.test.result == 'success')
    strategy:
      matrix:
        node:
          - 16
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node }}'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: dev
      - name: Deploy to main
        run: |
          echo "# Config"
          git config --local user.email "[hidden]"
          git config --local user.name "CI"
          echo "# Fetch all"
          git fetch --all
          echo "# Checkout/pull development"
          git checkout dev
          git pull
          echo "# Checkout/pull master"
          git checkout main
          git pull
          echo "# Merge"
          git merge dev -X theirs --allow-unrelated-histories
          echo "# Push"
          git push origin
          
          
          
  deploy-rejected:
    name: 'Deploy to rejected build ${{ github.run_number }}'
    runs-on: ubuntu-latest
    needs: [test]
    if: |
      always() && 
      (needs.test.result == 'failure')
    strategy:
      matrix:
        node:
          - 16
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: '${{ matrix.node }}'
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: dev
      - name: Deploy
        run: |
          echo "# Config"
          git config --local user.email "[hidden]"
          git config --local user.name "CI"
          git config --global pull.rebase true
          echo "# Fetch all"
          git fetch --all
          echo "# Checkout/pull development"
          git checkout dev
          git pull
          git checkout -b rejected/${{ github.run_number }}
          echo "# Merge"
          git merge dev -X theirs --allow-unrelated-histories
          git push origin rejected/${{ github.run_number }}
          echo "# Push"
          git checkout dev
          git reset --hard HEAD~1
          git push -f origin dev
          
    
